<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/> 
		<link href="style.css" rel="stylesheet" type="text/css">
	</head>
	<body>
		<div id="nextContent" style="display:none"></div>
		
		<script>

		window.onload = function(){
			var list = getData();
			Titanium.API.log('>>>>>>>>>>>>>>>>>>>>>>>>>> Fave list length= '+list.length);
			var win = Titanium.UI.currentWindow;
			
			var tableView = Titanium.UI.createTableView({data:list}, function(e) {
				var idx = e.index;
				var page = idx + 1;
				var title = page+ ' of ' +list.length
				var win = Titanium.UI.createWindow({url:'fave-content.html',title:title});
				
				var prop = Titanium.App.Properties;
				prop.setInt('index', idx);
				prop.setList('list', list);
				
				var delBtn = Titanium.UI.createButton({
					systemButton: Titanium.UI.iPhone.SystemButton.TRASH
				});
				
				win.setBarColor('#FFA3C8');
				win.setLeftNavButton(delBtn);
				win.open({animated:true});
				});
			
			// Refresh the data and rebuild the view when the page is re-displayed
			Titanium.UI.currentWindow.addEventListener('focused',function() { 
				list = getData(); 
				tableView.setData(list,{
					animationStyle: Titanium.UI.iPhone.RowAnimationStyle.DOWN
				}); 

			}) 
			
			Titanium.UI.currentWindow.addView(tableView);
			Titanium.UI.currentWindow.showView(tableView);
			
			// get data from DB
			function getData(){
				var faveList = [];
				
				var db = Titanium.Database.open('cuteDB');
				var rows = db.execute('SELECT * FROM myFavorites');
				
				while (rows.isValidRow()) {
					faveList.push({
						id: rows.fieldByName('id'),
						title: rows.fieldByName('title'),
						date: rows.fieldByName('date'),
						content: rows.fieldByName('content'),
						hasChild: true,
						image: 'images/duckie_fave.png'
					});
					rows.next();
				}
				db.close();
	
				// make the newest addition on top
				faveList.reverse();
				
				return faveList;
			}
			
			// To do - swipe to delete
		}
		
		</script>
	</body>
</html>
